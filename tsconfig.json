{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@components/*": [
        "components/*"
      ],
      "@utils/*": [
        "utils/*"
      ],
      "@icons/*": [
        "icons/*"
      ],
      "@hooks/*": [
        "hooks/*"
      ],
      "@stores/*": [
        "stores/*"
      ],
      "@config/*": [
        "config/*"
      ],
      "@services/*": [
        "services/*"
      ],
      "@types/*": [
        "types/*"
      ],
      "@constants/*": [
        "constants/*"
      ],
      "@scripts/*": [
        "scripts/*"
      ],
      "@deploy/*": [
        "deploy/*"
      ],
      "@test/*": [
        "test/*"
      ]
    },
    "target": "es6" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */,
    "module": "esnext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "lib": [
      "es5",
      "es6"
    ], /* Specify library files to be included in the compilation. */
    "allowJs": true /* Allow javascript files to be compiled. */,
    "jsx": "preserve" /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */,
    "sourceMap": true /* Generates corresponding '.map' file. */,
    "noEmit": true /* Do not emit outputs. */,
    "downlevelIteration": true /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */,
    "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
    "strict": false /* Enable all strict type-checking options. */,
    "strictNullChecks": false,
    "noImplicitAny": false /* Raise error on expressions and declarations with an implied 'any' type. */,
    "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
    "noImplicitReturns": false /* Report error when not all code paths in function return a value. */,
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "noUnusedLocals": false,
    "resolveJsonModule": true,
    "incremental": true,
    "outDir": "./build"
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.mjs",
    "**/*.js",
    "**/*.tsx",
    ".eslintrc.js",
    "components/GnosisSafe",
    "hardhat.config.js",
    "/dist/**/*",
    "typechain/**/*",
    "scripts/**/*",
    "tasks/**/*",
    "test/**/*",
    "typechain/**/*",
    "types/**/*",
    "utils/**/*.ts",
    "/deploy/**/*",
    "/dist/**/*",
    "/src/**/*",
    "sample-test.js",
    "hardhat.config.js",
    "deploy/gnosisafedeploy.mjs",
    "hardhat.config.js"
  ],
  "files": [
    "hardhat.config.js"
  ],
  "exclude": [
    "node_modules"
  ]
}
